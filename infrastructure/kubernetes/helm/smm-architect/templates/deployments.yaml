{{- range $service, $config := dict "core-service" (dict "port" .Values.service.ports.coreService "replicas" .Values.replicaCount.coreService "resources" .Values.resources.coreService "image" "core") "toolhub" (dict "port" .Values.service.ports.toolhub "replicas" .Values.replicaCount.toolhub "resources" .Values.resources.toolhub "image" "toolhub") "frontend" (dict "port" .Values.service.ports.frontend "replicas" .Values.replicaCount.frontend "resources" .Values.resources.frontend "image" "frontend") "model-router" (dict "port" .Values.service.ports.modelRouter "replicas" .Values.replicaCount.modelRouter "resources" .Values.resources.modelRouter "image" "model-router") "publisher" (dict "port" .Values.service.ports.publisher "replicas" .Values.replicaCount.publisher "resources" .Values.resources.publisher "image" "publisher") "agents" (dict "port" .Values.service.ports.agents "replicas" .Values.replicaCount.agents "resources" .Values.resources.agents "image" "agents") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "smm-architect.fullname" $ }}-{{ $service }}
  labels:
    {{- include "smm-architect.labels" $ | nindent 4 }}
    {{- include "smm-architect.componentLabels" $service | nindent 4 }}
spec:
  replicas: {{ $config.replicas }}
  selector:
    matchLabels:
      {{- include "smm-architect.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ $service }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "smm-architect.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ $service }}
    spec:
      {{- with $.Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "smm-architect.serviceAccountName" $ }}
      automountServiceAccountToken: {{ $.Values.serviceAccount.automountToken | default false }}
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds | default 30 }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $service }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
{{- $registry := $.Values.global.imageRegistry | default $.Values.image.registry -}}
{{- $repo := printf "%s/%s/%s" $registry $.Values.image.repository $config.image -}}
{{- if $.Values.image.digest }}
          image: "{{ $repo }}@sha256:{{ $.Values.image.digest }}"
{{- else }}
          image: "{{ $repo }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
{{- end }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $config.port }}
              protocol: TCP
          env:
            - name: PORT
              value: {{ $config.port | quote }}
            - name: NODE_ENV
              value: {{ $.Values.environment.nodeEnv | quote }}
            - name: LOG_LEVEL
              value: {{ $.Values.environment.logLevel | quote }}
          envFrom:
            - secretRef:
                name: {{ include "smm-architect.fullname" $ }}-secrets
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml $config.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          {{- if $.Values.logging.writeToFile }}
            - name: logs
              mountPath: /app/logs
          {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
      {{- if $.Values.logging.writeToFile }}
        - name: logs
          emptyDir: {}
      {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}